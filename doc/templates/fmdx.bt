LittleEndian();
char magic[4];
uint32 filesize;
uint32 entrycount;
uchar version; //VERY questionable
Assert(version == 1);
FSkip(71);

struct {
    struct ENTRY {
        char path[128];
        uint32 offset;
        uint32 size;
        uint32 unk;
        uint32 unk2;
        Assert(unk == 0);
        Assert(unk2 == 0);
    } entry[entrycount] <read=path,optimize=false>;
} entries <read=Str("entries: %d", entrycount)>;



struct {
    local int i;
    for(i = 0; i < entrycount; i+=1) {
        FSeek(entries.entry[i].offset);
        struct {
            local string path = entries.entry[i].path;
            uchar data[entries.entry[i].size] <bgcolor=cBlack>;
        } entry<read=path>;
    }
} data <read=Str("entries: %d", entrycount)>;